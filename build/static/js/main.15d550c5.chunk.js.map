{"version":3,"sources":["components/Form.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addTodo","useState","value","setValue","onSubmit","e","preventDefault","className","type","onChange","target","placeholder","Todo","todo","index","completeTodo","deleteTodo","style","textDecoration","isComplete","name","onClick","App","localTodos","JSON","parse","localStorage","getItem","todos","setTodos","newTodos","useEffect","setItem","stringify","filter","i","text","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAyBeA,G,MAvBF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACFC,mBAAS,IADP,mBACrBC,EADqB,KACdC,EADc,KAQ5B,OACE,uBAAMC,SAPa,SAACC,GACfH,IACLG,EAAEC,iBACFN,EAAQE,GACRC,EAAS,MAGqBI,UAAU,aAAxC,UACE,uBACEC,KAAK,OACLN,MAAOA,EACPO,SAAU,SAACJ,GAAD,OAAOF,EAASE,EAAEK,OAAOR,QACnCK,UAAU,oBACVI,YAAY,aAEd,wBAAQJ,UAAU,4BAA4BC,KAAK,SAAnD,sBCGSI,EApBF,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WACzC,OACE,sBAAKT,UAAU,kBAAf,UACE,sBAAMU,MAAO,CAAEC,eAAgBL,EAAKM,WAAa,eAAiB,IAAlE,SACGN,EAAKO,OAER,sBAAKb,UAAU,cAAf,UACE,yBAAQA,UAAU,kBAAkBc,QAAS,kBAAMN,EAAaD,IAAhE,UACG,IADH,WAEW,OACD,IACV,yBAAQP,UAAU,iBAAiBc,QAAS,kBAAML,EAAWF,IAA7D,UACG,IADH,IAEI,cCgDGQ,EAxDH,WACV,IAAMC,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,UADnC,EAGU1B,mBAASsB,GAAc,IAHjC,mBAGTK,EAHS,KAGFC,EAHE,KAcVd,EAAe,SAACD,GACpB,IAAMgB,EAAQ,YAAOF,GACrBE,EAAShB,GAAOK,YAAcW,EAAShB,GAAOK,WAC9CU,EAASC,IAEXC,qBAAU,WACRL,aAAaM,QAAQ,QAASR,KAAKS,UAAUL,OAE/C,IAAMZ,EAAa,SAACF,GAClBe,EACED,EAAMM,QAAO,SAACrB,EAAMsB,GAClB,OAAOrB,IAAUqB,OAKvB,OACE,sBAAK5B,UAAU,YAAf,UACE,oBAAIA,UAAU,oBAAd,wBACA,uBACA,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,iCAAf,UACE,cAAC,EAAD,CAAMP,QAhCE,SAACoC,GACf,IAAMN,EAAQ,sBACTF,GADS,CAEZ,CACER,KAAMgB,EACNjB,YAAY,KAGhBU,EAASC,MAyBH,oBAAIvB,UAAU,aAAd,SACGqB,EAAMS,KAAI,SAACxB,EAAMC,GAChB,OACE,cAAC,EAAD,CACEC,aAAcA,EACdC,WAAYA,EACZF,MAAOA,EACPD,KAAMA,GACDC,iBCxCRwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.15d550c5.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Form = ({ addTodo }) => {\r\n  const [value, setValue] = useState('')\r\n  const handleSubmit = (e) => {\r\n    if (!value) return\r\n    e.preventDefault()\r\n    addTodo(value)\r\n    setValue('')\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form-group\">\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => setValue(e.target.value)}\r\n        className=\"form-control mb-2\"\r\n        placeholder=\"Add todo\"\r\n      />\r\n      <button className=\"btn btn-primary btn-block\" type=\"submit\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst Todo = ({ todo, index, completeTodo, deleteTodo }) => {\r\n  return (\r\n    <div className=\"list-group-item\">\r\n      <span style={{ textDecoration: todo.isComplete ? 'line-through' : '' }}>\r\n        {todo.name}\r\n      </span>\r\n      <div className=\"float-right\">\r\n        <button className=\"btn btn-success\" onClick={() => completeTodo(index)}>\r\n          {' '}\r\n          Complete{' '}\r\n        </button>{' '}\r\n        <button className=\"btn btn-danger\" onClick={() => deleteTodo(index)}>\r\n          {' '}\r\n          X{' '}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport './App.css'\r\n\r\nimport Form from './components/Form'\r\nimport Todo from './components/Todo'\r\n\r\nconst App = () => {\r\n  const localTodos = JSON.parse(localStorage.getItem('todos'))\r\n\r\n  const [todos, setTodos] = useState(localTodos || [])\r\n  const addTodo = (text) => {\r\n    const newTodos = [\r\n      ...todos,\r\n      {\r\n        name: text,\r\n        isComplete: false,\r\n      },\r\n    ]\r\n    setTodos(newTodos)\r\n  }\r\n  const completeTodo = (index) => {\r\n    const newTodos = [...todos]\r\n    newTodos[index].isComplete = !newTodos[index].isComplete\r\n    setTodos(newTodos)\r\n  }\r\n  useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos))\r\n  })\r\n  const deleteTodo = (index) => {\r\n    setTodos(\r\n      todos.filter((todo, i) => {\r\n        return index !== i\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"display-4 mx-auto\">To Do List</h1>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <div className=\"className col-md-6 offset-md-3\">\r\n          <Form addTodo={addTodo} />\r\n          <ul className=\"list-group\">\r\n            {todos.map((todo, index) => {\r\n              return (\r\n                <Todo\r\n                  completeTodo={completeTodo}\r\n                  deleteTodo={deleteTodo}\r\n                  index={index}\r\n                  todo={todo}\r\n                  key={index}\r\n                />\r\n              )\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}